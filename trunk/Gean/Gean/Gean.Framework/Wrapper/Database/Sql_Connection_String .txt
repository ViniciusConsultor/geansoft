
http://www.dedecms.com/knowledge/program/asp-donet/2009/0929/85.html



.NET SQL Server连接字符串句法



数据库的连接性已经发展成为应用程序开发的一个标准方面。数据库连接字符串
现在已经成为每个项目的标准必备条件。我发现自己为了找到所需要的句法，经
常要从另外一个应用程序中复制连接字符串或者进行一次搜索。这个在与SQL Server
交互操作时更是如此，因为它有太多的连接字符串选项。现在就让我们来研究一
下连接字符串的众多方面。

连接字符串

在对象实例化或者建立期间，数据库连接字符串通过属性或方法被传递到必要的
对象。连接字符串的格式是一个以分号为界，划分键／值参数对的列表。列表A
中包括了一个C#中的例子，说明了怎样用创建SqlConnection对象的方法连接到
SQL Server（实际的连接字符串是通过对象的ConnectionString属性分配的）。
列表B中包括的是VB.NET的版本。

列表A

string cString = "Data Source=server;Initial Catalog=db;User ID=test;Password=test;";
SqlConnectionconn = new SqlConnection();
conn.ConnectionString = cString;
conn.Open(); 

列表B

Dim cString As String
cString = "Data Source=server;Initial Catalog=db;User ID=test;Password=test;"

Dim conn As SqlConnection = New SqlConnection()
conn.ConnectionString = cString
conn.Open()

连接字符串会指定数据库服务器和数据库，以及访问数据库必需的用户名和密码。
但是这种格式并不是对所有数据库交互都适用，它的确有许多可用的选项，其中
很多选项都有同义词。

和Data Source（数据源）、Initial Catalog（初始编目）、User ID（用户ID）、
和Password（密码）等元素一起，下面这些选项都是可用的：

    * Application Name（应用程序名称）：应用程序的名称。如果没有被指定的
    话，它的值为.NET SqlClient Data Provider（数据提供程序）.
    
    * AttachDBFilename／extended properties（扩展属性）／Initial File Name
    （初始文件名）：可连接数据库的主要文件的名称，包括完整路径名称。数据
    库名称必须用关键字数据库指定。
    
    * Connect Timeout（连接超时）／Connection Timeout（连接超时）： 一个
    到服务器的连接在终止之前等待的时间长度（以秒计），缺省值为15。
    
    * Connection Lifetime（连接生存时间）：当一个连接被返回到连接池时，
    它的创建时间会与当前时间进行对比。如果这个时间跨度超过了连接的有效期
    的话，连接就被取消。其缺省值为0。
    
    * Connection Reset（连接重置）：表示一个连接在从连接池中被移除时是否
    被重置。一个伪的有效在获得一个连接的时候就无需再进行一个额外的服务器
    来回运作，其缺省值为真。
    
    * Current Language（当前语言）：SQL Server语言记录的名称。
    
    * Data Source（数据源）／Server（服务器）／Address（地址）／Addr（地
    址）／Network Address（网络地址）：SQL Server实例的名称或网络地址。
    
    * Encrypt（加密）：当值为真时，如果服务器安装了授权证书，SQL Server
    就会对所有在客户和服务器之间传输的数据使用SSL加密。被接受的值有true
    （真）、false（伪）、yes（是）和no（否）。
    
    * Enlist（登记）：表示连接池程序是否会自动登记创建线程的当前事务语
    境中的连接，其缺省值为真。
    
    * Database（数据库）／Initial Catalog（初始编目）：数据库的名称。
    
    * Integrated Security（集成安全）／Trusted Connection（受信连接）：
    表示Windows认证是否被用来连接数据库。它可以被设置成真、伪或者是和
    真对等的sspi，其缺省值为伪。
    
    * Max Pool Size（连接池的最大容量）：连接池允许的连接数的最大值，
    其缺省值为100。
    
    * Min Pool Size（连接池的最小容量）：连接池允许的连接数的最小值，
    其缺省值为0。
    
    * Network Library（网络库）／Net（网络）：用来建立到一个SQL Server
    实例的连接的网络库。支持的值包括： dbnmpntw (Named Pipes)、dbmsrpcn 
    (Multiprotocol／RPC)、dbmsvinn(Banyan Vines)、dbmsspxn (IPX／SPX)
    和dbmssocn (TCP／IP)。协议的动态链接库必须被安装到适当的连接，其
    缺省值为TCP／IP。
    
    * Packet Size（数据包大小）：用来和数据库通信的网络数据包的大小。
    其缺省值为8192。
    
    * Password（密码）／Pwd：与帐户名相对应的密码。
    
    * Persist Security Info（保持安全信息）：用来确定一旦连接建立了以后
    安全信息是否可用。如果值为真的话，说明像用户名和密码这样对安全性比
    较敏感的数据可用，而如果值为伪则不可用。重置连接字符串将重新配置包
    括密码在内的所有连接字符串的值。其缺省值为伪。
    
    * Pooling（池）：确定是否使用连接池。如果值为真的话，连接就要从适当
    的连接池中获得，或者，如果需要的话，连接将被创建，然后被加入合适的
    连接池中。其缺省值为真。
    
    * User ID（用户ID）：用来登陆数据库的帐户名。
    
    * Workstation ID（工作站ID）：连接到SQL Server的工作站的名称。其缺
    省值为本地计算机的名称。 
    

下面的连接字符串用一个受信连接和指定的登陆证书（不及管理员密码空缺安全），
在TestDev1服务器上与Northwind数据库建立连接：

Server=TestDev1;Database=Northwind;User ID=sa;
Password=;Trusted_Connection=True;

下一个连接字符串使用了TCIP／IP 和一个指定的IP地址：

Data Source=192.162.1.100,1433;Network Library=DBMSSOCN;
Initial Catalog=Northwind;User ID=sa;Password=;

所使用的选项可以很容易地包括在连接字符串中，但是它们还是取决于你的应用程
序和它的要求。知道什么是可用的是很有好处的，这样你就可以恰当地使用它。

使用ADO.NET 2.0

ADO.NET 2.0 为每一个.NET框架的数据提供程序引进了新的连接字符串生成器。关键
词作为属性被列出，使得连接字符串句法在提交到数据源之前就生效。也还有新的类
可以使连接字符串在配置文件中的存储和检索变得简单，并且用受保护的方式将它们
加密。

或多或少，正是你需要的。

通过.NET应用程序连接到SQL Server为特定的连接参数和其他选项提供了多种选择。
它可以像指定数据库、服务器和登录凭据那样简单，也可能像设置缓冲连接池和安全
选项一样复杂。 ADO.NET 2.0的确通过数据库类使得连接字符串选项具有了更大的灵
活性。你只需使用应用程序所需要的选项，不必理会其他的。而且，如果你发现自己
身陷困境，记不得连接字符串句法了，可以查阅以下网址ConnectionStrings.com。